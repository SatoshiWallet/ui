// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SendConfirmation should render with destination 1`] = `
<React.Fragment>
  <SceneWrapper>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "marginTop": 14.045774647887324,
            },
            Object {
              "backgroundColor": "transparent",
              "marginHorizontal": 14.045774647887324,
            },
          ]
        }
      >
        <FormattedText
          style={
            Object {
              "color": "#FFFFFF",
              "fontSize": 22.473239436619718,
            }
          }
        >
          Balance:
           
          0
           
          BTC
           (
          
           
          0.00
          )
        </FormattedText>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "marginVertical": 16.854929577464787,
            },
            Object {
              "backgroundColor": "transparent",
              "marginHorizontal": 14.045774647887324,
            },
          ]
        }
      >
        <ExchangeRate
          primaryInfo={
            Object {
              "displayCurrencyCode": "BTC",
              "displayDenomination": Object {
                "multiplier": "100000000",
                "name": "BTC",
                "symbol": "₿",
              },
              "exchangeCurrencyCode": "BTC",
              "exchangeDenomination": Object {
                "multiplier": "100000000",
                "name": "BTC",
                "symbol": "₿",
              },
            }
          }
          secondaryDisplayAmount={8000}
          secondaryInfo={
            Object {
              "displayCurrencyCode": "USD",
              "displayDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
              "exchangeCurrencyCode": "iso:USD",
              "exchangeDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "width": "100%",
          }
        }
      >
        <ExchangedFlipInput
          exchangeSecondaryToPrimaryRatio={8000}
          forceUpdateGuiCounter={0}
          headerText="Send from undefined"
          isEditable={true}
          isFiatOnTop={false}
          isFocus={false}
          keyboardVisible={false}
          onExchangeAmountChanged={[Function]}
          overridePrimaryExchangeAmount=""
          primaryCurrencyInfo={
            Object {
              "displayCurrencyCode": "BTC",
              "displayDenomination": Object {
                "multiplier": "100000000",
                "name": "BTC",
                "symbol": "₿",
              },
              "exchangeCurrencyCode": "BTC",
              "exchangeDenomination": Object {
                "multiplier": "100000000",
                "name": "BTC",
                "symbol": "₿",
              },
            }
          }
          secondaryCurrencyInfo={
            Object {
              "displayCurrencyCode": "USD",
              "displayDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
              "exchangeCurrencyCode": "iso:USD",
              "exchangeDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
            }
          }
        />
        <Padding
          style={
            Object {
              "paddingHorizontal": 54,
            }
          }
        >
          <Item
            style={
              Object {
                "alignItems": "center",
                "flex": -1,
              }
            }
          >
            <Row
              style={
                Object {
                  "paddingVertical": 4,
                }
              }
            >
              <FormattedText
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#FFFFFF",
                      "fontSize": 22.473239436619718,
                    },
                    Object {},
                  ]
                }
              >
                
              </FormattedText>
            </Row>
            <Row
              style={
                Object {
                  "paddingVertical": 10,
                }
              }
            >
              <Text
                style={Object {}}
              >
                <FormattedText>
                  To: airbitz
                </FormattedText>
              </Text>
            </Row>
            <AddressTextWithBlockExplorerModal
              address="123123123"
              addressExplorer={null}
            >
              <Row
                style={
                  Object {
                    "paddingVertical": 4,
                  }
                }
              >
                <Text
                  style={Object {}}
                >
                  <FormattedText>
                    Address: 123123123
                  </FormattedText>
                </Text>
              </Row>
            </AddressTextWithBlockExplorerModal>
          </Item>
        </Padding>
      </View>
      <Footer
        style={
          Array [
            Object {
              "marginTop": 16.854929577464787,
            },
            false,
          ]
        }
      >
        <ABSlider
          forceUpdateGuiCounter={0}
          parentStyle={
            Object {
              "width": 379.23591549295776,
            }
          }
          resetSlider={false}
          showSpinner={false}
          sliderDisabled={true}
        />
      </Footer>
    </View>
  </SceneWrapper>
</React.Fragment>
`;

exports[`SendConfirmation should render with standard props 1`] = `
<React.Fragment>
  <SceneWrapper>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "marginTop": 14.045774647887324,
            },
            Object {
              "backgroundColor": "transparent",
              "marginHorizontal": 14.045774647887324,
            },
          ]
        }
      >
        <FormattedText
          style={
            Object {
              "color": "#FFFFFF",
              "fontSize": 22.473239436619718,
            }
          }
        >
          Balance:
           
          0
           
          BTC
           (
          
           
          0.00
          )
        </FormattedText>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "marginVertical": 16.854929577464787,
            },
            Object {
              "backgroundColor": "transparent",
              "marginHorizontal": 14.045774647887324,
            },
          ]
        }
      >
        <ExchangeRate
          primaryInfo={
            Object {
              "displayCurrencyCode": "BTC",
              "displayDenomination": Object {
                "multiplier": "100000000",
                "name": "BTC",
                "symbol": "₿",
              },
              "exchangeCurrencyCode": "BTC",
              "exchangeDenomination": Object {
                "multiplier": "100000000",
                "name": "BTC",
                "symbol": "₿",
              },
            }
          }
          secondaryDisplayAmount={8000}
          secondaryInfo={
            Object {
              "displayCurrencyCode": "USD",
              "displayDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
              "exchangeCurrencyCode": "iso:USD",
              "exchangeDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "width": "100%",
          }
        }
      >
        <ExchangedFlipInput
          exchangeSecondaryToPrimaryRatio={8000}
          forceUpdateGuiCounter={0}
          headerText="Send from undefined"
          isEditable={true}
          isFiatOnTop={false}
          isFocus={false}
          keyboardVisible={false}
          onExchangeAmountChanged={[Function]}
          overridePrimaryExchangeAmount=""
          primaryCurrencyInfo={
            Object {
              "displayCurrencyCode": "BTC",
              "displayDenomination": Object {
                "multiplier": "100000000",
                "name": "BTC",
                "symbol": "₿",
              },
              "exchangeCurrencyCode": "BTC",
              "exchangeDenomination": Object {
                "multiplier": "100000000",
                "name": "BTC",
                "symbol": "₿",
              },
            }
          }
          secondaryCurrencyInfo={
            Object {
              "displayCurrencyCode": "USD",
              "displayDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
              "exchangeCurrencyCode": "iso:USD",
              "exchangeDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
            }
          }
        />
        <Padding
          style={
            Object {
              "paddingHorizontal": 54,
            }
          }
        >
          <Item
            style={
              Object {
                "alignItems": "center",
                "flex": -1,
              }
            }
          >
            <Row
              style={
                Object {
                  "paddingVertical": 4,
                }
              }
            >
              <FormattedText
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#FFFFFF",
                      "fontSize": 22.473239436619718,
                    },
                    Object {},
                  ]
                }
              >
                
              </FormattedText>
            </Row>
            <AddressTextWithBlockExplorerModal
              address="123123123"
              addressExplorer={null}
            >
              <Row
                style={
                  Object {
                    "paddingVertical": 4,
                  }
                }
              >
                <Text
                  style={Object {}}
                >
                  <FormattedText>
                    Address: 123123123
                  </FormattedText>
                </Text>
              </Row>
            </AddressTextWithBlockExplorerModal>
          </Item>
        </Padding>
      </View>
      <Footer
        style={
          Array [
            Object {
              "marginTop": 16.854929577464787,
            },
            false,
          ]
        }
      >
        <ABSlider
          forceUpdateGuiCounter={0}
          parentStyle={
            Object {
              "width": 379.23591549295776,
            }
          }
          resetSlider={false}
          showSpinner={false}
          sliderDisabled={true}
        />
      </Footer>
    </View>
  </SceneWrapper>
</React.Fragment>
`;

exports[`SendConfirmation should render with unique identifier button with "ADD" text (XMR) 1`] = `
<React.Fragment>
  <SceneWrapper>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "marginTop": 14.045774647887324,
            },
            Object {
              "backgroundColor": "transparent",
              "marginHorizontal": 14.045774647887324,
            },
          ]
        }
      >
        <FormattedText
          style={
            Object {
              "color": "#FFFFFF",
              "fontSize": 22.473239436619718,
            }
          }
        >
          Balance:
           
          0
           
          XMR
           (
          
           
          0.00
          )
        </FormattedText>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "marginVertical": 16.854929577464787,
            },
            Object {
              "backgroundColor": "transparent",
              "marginHorizontal": 14.045774647887324,
            },
          ]
        }
      >
        <ExchangeRate
          primaryInfo={
            Object {
              "displayCurrencyCode": "XMR",
              "displayDenomination": Object {
                "multiplier": "1000000000000",
                "name": "XMR",
                "symbol": "ɱ",
              },
              "exchangeCurrencyCode": "XMR",
              "exchangeDenomination": Object {
                "multiplier": "1000000000000",
                "name": "XMR",
                "symbol": "ɱ",
              },
            }
          }
          secondaryDisplayAmount={8000}
          secondaryInfo={
            Object {
              "displayCurrencyCode": "USD",
              "displayDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
              "exchangeCurrencyCode": "iso:USD",
              "exchangeDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "width": "100%",
          }
        }
      >
        <ExchangedFlipInput
          exchangeSecondaryToPrimaryRatio={8000}
          forceUpdateGuiCounter={0}
          headerText="Send from undefined"
          isEditable={true}
          isFiatOnTop={false}
          isFocus={false}
          keyboardVisible={false}
          onExchangeAmountChanged={[Function]}
          overridePrimaryExchangeAmount=""
          primaryCurrencyInfo={
            Object {
              "displayCurrencyCode": "XMR",
              "displayDenomination": Object {
                "multiplier": "1000000000000",
                "name": "XMR",
                "symbol": "ɱ",
              },
              "exchangeCurrencyCode": "XMR",
              "exchangeDenomination": Object {
                "multiplier": "1000000000000",
                "name": "XMR",
                "symbol": "ɱ",
              },
            }
          }
          secondaryCurrencyInfo={
            Object {
              "displayCurrencyCode": "USD",
              "displayDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
              "exchangeCurrencyCode": "iso:USD",
              "exchangeDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
            }
          }
        />
        <Padding
          style={
            Object {
              "paddingHorizontal": 54,
            }
          }
        >
          <Item
            style={
              Object {
                "alignItems": "center",
                "flex": -1,
              }
            }
          >
            <Row
              style={
                Object {
                  "paddingVertical": 4,
                }
              }
            >
              <FormattedText
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#FFFFFF",
                      "fontSize": 22.473239436619718,
                    },
                    Object {},
                  ]
                }
              >
                
              </FormattedText>
            </Row>
          </Item>
        </Padding>
      </View>
      <Footer
        style={
          Array [
            Object {
              "marginTop": 16.854929577464787,
            },
            false,
          ]
        }
      >
        <ABSlider
          forceUpdateGuiCounter={0}
          parentStyle={
            Object {
              "width": 379.23591549295776,
            }
          }
          resetSlider={false}
          showSpinner={false}
          sliderDisabled={true}
        />
      </Footer>
    </View>
  </SceneWrapper>
</React.Fragment>
`;

exports[`SendConfirmation should render with unique identifier button with "ADD" text (XRP) 1`] = `
<React.Fragment>
  <SceneWrapper>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "marginTop": 14.045774647887324,
            },
            Object {
              "backgroundColor": "transparent",
              "marginHorizontal": 14.045774647887324,
            },
          ]
        }
      >
        <FormattedText
          style={
            Object {
              "color": "#FFFFFF",
              "fontSize": 22.473239436619718,
            }
          }
        >
          Balance:
           
          0
           
          XRP
           (
          
           
          0.00
          )
        </FormattedText>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "marginVertical": 16.854929577464787,
            },
            Object {
              "backgroundColor": "transparent",
              "marginHorizontal": 14.045774647887324,
            },
          ]
        }
      >
        <ExchangeRate
          primaryInfo={
            Object {
              "displayCurrencyCode": "XRP",
              "displayDenomination": Object {
                "multiplier": "1000000",
                "name": "XRP",
                "symbol": "X",
              },
              "exchangeCurrencyCode": "XRP",
              "exchangeDenomination": Object {
                "multiplier": "1000000",
                "name": "XRP",
                "symbol": "X",
              },
            }
          }
          secondaryDisplayAmount={8000}
          secondaryInfo={
            Object {
              "displayCurrencyCode": "USD",
              "displayDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
              "exchangeCurrencyCode": "iso:USD",
              "exchangeDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "width": "100%",
          }
        }
      >
        <ExchangedFlipInput
          exchangeSecondaryToPrimaryRatio={8000}
          forceUpdateGuiCounter={0}
          headerText="Send from undefined"
          isEditable={true}
          isFiatOnTop={false}
          isFocus={false}
          keyboardVisible={false}
          onExchangeAmountChanged={[Function]}
          overridePrimaryExchangeAmount=""
          primaryCurrencyInfo={
            Object {
              "displayCurrencyCode": "XRP",
              "displayDenomination": Object {
                "multiplier": "1000000",
                "name": "XRP",
                "symbol": "X",
              },
              "exchangeCurrencyCode": "XRP",
              "exchangeDenomination": Object {
                "multiplier": "1000000",
                "name": "XRP",
                "symbol": "X",
              },
            }
          }
          secondaryCurrencyInfo={
            Object {
              "displayCurrencyCode": "USD",
              "displayDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
              "exchangeCurrencyCode": "iso:USD",
              "exchangeDenomination": Object {
                "multiplier": "1",
                "name": "",
                "symbol": "",
              },
            }
          }
        />
        <Padding
          style={
            Object {
              "paddingHorizontal": 54,
            }
          }
        >
          <Item
            style={
              Object {
                "alignItems": "center",
                "flex": -1,
              }
            }
          >
            <Row
              style={
                Object {
                  "paddingVertical": 4,
                }
              }
            >
              <FormattedText
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#FFFFFF",
                      "fontSize": 22.473239436619718,
                    },
                    Object {},
                  ]
                }
              >
                
              </FormattedText>
            </Row>
            <Row
              style={
                Object {
                  "paddingVertical": 10,
                }
              }
            >
              <TouchableOpacity
                activeOpacity={0.3}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                    "padding": 19.664084507042254,
                  }
                }
              >
                <FormattedText
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#FFFFFF",
                    }
                  }
                >
                  Add Destination Tag
                </FormattedText>
              </TouchableOpacity>
            </Row>
          </Item>
        </Padding>
      </View>
      <Footer
        style={
          Array [
            Object {
              "marginTop": 16.854929577464787,
            },
            Object {
              "marginTop": 0,
            },
          ]
        }
      >
        <ABSlider
          forceUpdateGuiCounter={0}
          parentStyle={
            Object {
              "width": 379.23591549295776,
            }
          }
          resetSlider={false}
          showSpinner={false}
          sliderDisabled={true}
        />
      </Footer>
    </View>
  </SceneWrapper>
  <Connect(UniqueIdentifierModal)
    currencyCode="XRP"
    keyboardType="numeric"
  />
</React.Fragment>
`;
